{"version":3,"sources":["components/TimeFormat.js","components/MemberModal.js","components/DataTable.js","components/QuickStats.js","stitch/app.js","stitch/mongodb.js","stitch/authentication.js","components/useMembers.js","components/Dashboard.js","components/Enrollment.js","components/Settings.js","components/StitchAuth.js","components/RPMApp.js","components/Login.js","components/App.js","index.js"],"names":["TimeFormat","props","time","react_default","a","createElement","Date","toLocaleDateString","toLocaleTimeString","timeStyle","style","color","Description","styled","div","_templateObject","CustomizedAxisTick","x","y","payload","transform","concat","dy","fontSize","textAnchor","fill","value","MemberModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNoteChange","event","setState","note","target","handleSubmit","members","i","_","findIndex","email","memberSelected","toISOString","noteData","unshift","state","lastNote","lastContact","onNoteChange","_this2","member","find","Modal","open","onClose","size","commonjs_default","Header","image","Image","src","img","rounded","Content","name","gender","age","Card","Group","minWidth","content","es6","width","height","data","bodyWeightData","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","type","domain","stackId","stroke","systolicBPData","diastolicBPData","as","dividing","Form","reply","TextArea","placeholder","rows","onChange","Button","labelPosition","icon","onClick","primary","Comment","minimal","map","d","key","Author","Text","Component","RedFont","span","DataTable_templateObject","GreenFont","_templateObject2","_templateObject3","DTCell","Table","Cell","textAlign","unit","valueDiff","className","DataTable_Description","lastDate","build","SLData","svgWidth","svgHeight","DataTable","handleSort","clickedColumn","_this$state","columnSorted","direction","onMembersChange","sortBy","reverse","handleRowClick","clickedRow","modalOpen","closeModal","bind","assertThisInitialized","newmembers","_this$state2","sortable","celled","selectable","compact","basic","Row","HeaderCell","sorted","Body","bodyWeight","bodyWeightDiff","bodyWeightSLData","bodyWeightLastDate","systolicBP","systolicBPDiff","systolicBPSLData","systolicBPLastDate","diastolicBP","diastolicBPDiff","diastolicBPSLData","diastolicBPLastDate","MemberModal_MemberModal","Segment","Dimmer","active","inverted","Loader","QuickStats","stats","Meta","au","QuickStats_CustomizedAxisTick","bw","bp","app","Stitch","hasAppClient","getAppClient","initializeAppClient","getServiceClient","RemoteMongoClient","factory","db","collection","loginAnonymous","credential","AnonymousCredential","auth","loginWithCredential","getCurrentUser","isLoggedIn","user","logoutCurrentUser","logoutUserWithId","id","signupUser","password","getProviderClient","UserPasswordAuthProviderClient","registerWithEmail","loginUser","UserPasswordCredential","loadMembers","_ref","asyncToGenerator","regenerator_default","mark","_callee","memberDetails","today","bwDatesAll","bpDatesAll","auDatesAll","bwStats","bpStats","auStats","wrap","_context","prev","next","asArray","sent","forEach","bwDates","union","substring","bpDates","auDates","dob","Math","round","getTime","length","takeRight","avatar","countBy","abrupt","stop","apply","arguments","Dashboard","handleMembersChange","then","newMembers","Subheader","DataTable_DataTable","Enrollment","Grid","Column","Input","fluid","label","inline","Radio","widths","Checkbox","Settings","StitchAuthContext","React","createContext","useStitchAuth","context","useContext","Error","StitchAuthProvider","_React$useState","useState","currentUser","_React$useState2","slicedToArray","authState","setAuthState","handleAnonymousLogin","loggedInUser","objectSpread","handleLogout","_ref2","_callee2","_context2","console","log","handleSignup","_ref3","_callee3","_context3","_x","_x2","handleEmailPasswordLogin","_ref4","_callee4","_context4","_x3","_x4","authInfo","useMemo","actions","Provider","children","RPMApp","_useStitchAuth","_useState","_useState2","menu","setMenu","handleMenuChange","Menu","borderless","fixed","Container","Item","header","marginRight","position","profile","marginTop","Dashboard_Dashboard","LoginForm","setEmail","_useState3","_useState4","setPassword","verticalAlign","maxWidth","stacked","iconPosition","AppUI","Login","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f6a2e608.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default function TimeFormat(props){\n\n  if (props.time) {\n    return (\n      <div>\n        {(new Date(props.time)).toLocaleDateString()}&nbsp;\n        {(new Date(props.time)).toLocaleTimeString([], {timeStyle: 'short'})}\n      </div>\n    );\n  } else {\n    return (<div style={{color: 'grey'}}>-</div>);\n  }\n}","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport {Header, \n  Image, \n  Modal, \n  Button, \n  Comment,\n  Form,\n  Card,\n} from 'semantic-ui-react';\nimport ErrorBoundary from \"react-error-boundary\";\nimport styled from '@emotion/styled';\nimport TimeFormat from './TimeFormat';\nimport {\n  LineChart, \n  Line, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip,\n} from 'recharts';\n\nconst Description = styled.div`\n  color: grey;\n  font-size: 0.7em;\n  font-weight: normal;\n  line-height: normal\n` \nfunction CustomizedAxisTick(props){\n  const {\n    x, y, payload,\n  } = props;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text \n        x={0} \n        y={0} \n        dy={8} \n        fontSize='0.75em'\n        textAnchor=\"end\" \n        fill=\"#666\" \n        transform=\"rotate(-30)\">{(new Date(payload.value)).toLocaleDateString()}\n      </text>\n    </g>\n  );\n}\n\nexport default class MemberModal extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {note: null};\n  }\n\n  handleNoteChange = event => {\n    this.setState({note: event.target.value});\n  }\n\n  handleSubmit = event => {\n    \n    let members = this.props.members;\n    const i = _.findIndex(members, x => x.email===this.props.memberSelected);\n    const time = new Date().toISOString();\n    members[i].noteData.unshift({value: this.state.note, time:time});\n    members[i].lastNote = this.state.note;\n    members[i].lastContact = time;\n\n    this.props.onNoteChange(members);\n    // update Mongo TODO\n  }\n\n  render(){\n\n    const member = _.find(this.props.members, x => x.email===this.props.memberSelected);\n\n    return(\n      <Modal open={this.props.open} \n              onClose={this.props.onClose}\n              size='large'>\n        {member && (\n          <ErrorBoundary>\n            <Modal.Header>\n              <Header image>\n                <Image src={member.img} rounded size='large' />\n                <Header.Content>\n                  {member.name}\n                  <Description>\n                    {member.gender},&nbsp;\n                    {member.age} years old                      \n                  </Description>\n                </Header.Content>\n              </Header>\n            </Modal.Header>\n            <Modal.Content>\n              <Card.Group>\n                <Card style={{minWidth: '320px'}}>\n                  <Card.Content>\n                    <Card.Header content=\"Body Weight (in lbs)\"/>\n                    <LineChart\n                      width={300}\n                      height={150}\n                      data={member.bodyWeightData}\n                      margin={{\n                        top: 20, right: 30, left: 0, bottom: 20,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey='time' tick={<CustomizedAxisTick />}/>\n                      <YAxis dataKey='value' type='number' domain={['dataMin', 'dataMax']}/>\n                      <Tooltip />\n                      <Line type=\"monotone\" dataKey=\"value\" stackId=\"1\" stroke=\"#ffc658\" />\n                    </LineChart>\n                  </Card.Content>\n                </Card>\n                <Card style={{minWidth: '320px'}}>\n                  <Card.Content>\n                    <Card.Header content=\"Systolic BP (in mmHg)\"/>\n                    <LineChart\n                      width={300}\n                      height={150}\n                      data={member.systolicBPData}\n                      margin={{\n                        top: 20, right: 30, left: 0, bottom: 20,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey='time' tick={<CustomizedAxisTick />}/>\n                      <YAxis dataKey='value' type='number' domain={['dataMin', 'dataMax']}/>\n                      <Tooltip />\n                      <Line type=\"monotone\" dataKey=\"value\" stackId=\"1\" stroke=\"#82ca9d\" />\n                    </LineChart>\n                  </Card.Content>\n                </Card>\n                <Card style={{minWidth: '320px'}}>\n                  <Card.Content>\n                    <Card.Header content=\"Diastolic BP (in mmHg)\"/>\n                    <LineChart\n                      width={300}\n                      height={150}\n                      data={member.diastolicBPData}\n                      margin={{\n                        top: 20, right: 30, left: 0, bottom: 20,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey='time' tick={<CustomizedAxisTick />}/>\n                      <YAxis dataKey='value' type='number' domain={['dataMin', 'dataMax']}/>\n                      <Tooltip />\n                      <Line type=\"monotone\" dataKey=\"value\" stackId=\"1\" stroke=\"#8884d8\" />\n                    </LineChart>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n              <Header as='h3' dividing>\n                Notes\n              </Header>\n              <Form reply>\n                <Form.TextArea \n                  placeholder='Leave a note.'\n                  rows={2} \n                  onChange={this.handleNoteChange}/>\n                <Button \n                  content='Add Note' \n                  labelPosition='left' \n                  icon='edit'\n                  onClick={this.handleSubmit} \n                  primary />\n              </Form>\n              <Comment.Group minimal>\n                {_.map(member.noteData, (d) => (\n                  <Comment key={d.time}>\n                    <Comment.Content>\n                      <Comment.Author><TimeFormat time={d.time}/></Comment.Author>\n                      <Comment.Text>{d.value}</Comment.Text>\n                    </Comment.Content>\n                  </Comment>\n                ))}\n              </Comment.Group>\n            </Modal.Content>\n          </ErrorBoundary>\n        )}\n      </Modal>\n    )\n  }\n}\n\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Table, \n  Header, \n  Image, \n  Loader, \n  Segment, \n  Dimmer, \n} from 'semantic-ui-react';\nimport { Sparklines, \n  SparklinesLine, \n  SparklinesSpots, \n} from 'react-sparklines';\nimport styled from '@emotion/styled';\nimport ErrorBoundary from \"react-error-boundary\";\nimport MemberModal from './MemberModal';\nimport TimeFormat from './TimeFormat';\n\n\nconst RedFont = styled.span`\n  color: red;\n  font-size: 0.7em;\n`\nconst GreenFont = styled.span`\n  color: green;\n  font-size: 0.7em;\n`\nconst Description = styled.div`\n  color: grey;\n  font-size: 0.7em;\n  font-weight: normal;\n  line-height: normal\n` \n\n\n\nfunction DTCell(props){\n  if (props.value) {\n    return (\n        <Table.Cell textAlign='center'>\n          <Header as='h4'>\n            <Header.Content>\n              {props.value} {props.unit} &nbsp;\n              {props.valueDiff > 0 ? \n                <RedFont> +{props.valueDiff} <i className='fas fa-arrow-up'></i></RedFont>:\n                <GreenFont> {props.valueDiff} <i className='fas fa-arrow-down'></i></GreenFont>}\n              <Description>\n                <TimeFormat time={props.lastDate}/>\n              </Description>\n              <Sparklines data={props.SLData} svgWidth={100} svgHeight={25} margin={5} >\n                <SparklinesLine color={props.valueDiff > 0? 'red':'green'}/>\n                <SparklinesSpots size={2} />\n              </Sparklines>\n            </Header.Content>\n          </Header>\n        </Table.Cell>\n      )\n  } else {\n    return (\n      <Table.Cell textAlign='center'><div style={{color: 'grey'}}>-</div></Table.Cell>\n    )\n\n  }\n  \n}\n\n\nexport default class DataTable extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleNoteChange = this.handleNoteChange.bind(this);\n\n    this.state = {\n      columnSorted: null,\n      direction: null,\n      memberSelected: null,\n      modalOpen: false,\n    }\n  }\n\n  handleSort = (clickedColumn) => () => {\n    const { columnSorted, direction } = this.state;\n    const members = this.props.members;\n\n    if (columnSorted !== clickedColumn) {\n      this.setState({\n        columnSorted: clickedColumn,\n        direction: 'ascending',\n      });\n      this.props.onMembersChange(_.sortBy(members, [clickedColumn]));\n      return\n    }\n\n    this.setState({\n      //data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n    });\n    this.props.onMembersChange(members.reverse());\n  }\n\n  handleRowClick = (clickedRow) => () => {\n\n    //const { columnSorted, direction } = this.state;\n    //const data = this.props.members;\n\n    // TODO: onDataChange to update the latest data\n\n    this.setState({modalOpen: true, memberSelected: clickedRow});\n\n    return\n  }\n\n  closeModal = () => this.setState({modalOpen: false, memberSelected: null})\n\n  handleNoteChange(newmembers){\n    this.props.onMembersChange(newmembers);\n  }\n\n  render() {\n    const { columnSorted, direction, modalOpen, memberSelected } = this.state;\n    const members = this.props.members;\n\n\n    if (!members){ \n      return(\n        <Segment>\n          <Dimmer active inverted>\n            <Loader inverted>Loading</Loader>\n          </Dimmer>\n\n          <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n        </Segment>\n      ) \n    } else{\n      return (\n        <ErrorBoundary>\n          <Table sortable celled selectable compact basic='very'>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={4}\n                  sorted={columnSorted === 'name' ? direction : null}\n                  onClick={this.handleSort('name')}\n                >\n                  Name\n                </Table.HeaderCell>\n                <Table.HeaderCell width={3} textAlign='center'\n                  sorted={columnSorted === 'lastContact' ? direction : null}\n                  onClick={this.handleSort('lastContact')}\n                >\n                  Last Contact\n                </Table.HeaderCell>\n                <Table.HeaderCell width={3} textAlign='center'\n                  sorted={columnSorted === 'bodyWeight' ? direction : null}\n                  onClick={this.handleSort('bodyWeight')}\n                >\n                  Body Weight\n                </Table.HeaderCell>\n                <Table.HeaderCell width={3} textAlign='center'\n                  sorted={columnSorted === 'systolicBP' ? direction : null}\n                  onClick={this.handleSort('systolicBP')}\n                >\n                  Systolic BP\n                </Table.HeaderCell>\n                <Table.HeaderCell width={3} textAlign='center'\n                  sorted={columnSorted === 'diastolicBP' ? direction : null}\n                  onClick={this.handleSort('diastolicBP')}\n                >\n                  Diastolic BP\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {_.map(members, (d) => (\n                <Table.Row key={d.email} onClick={this.handleRowClick(d.email)}>\n                  <Table.Cell >\n                    <Header as='h4' image>\n                      <Image src={d.img} rounded size='medium' />\n                      <Header.Content>\n                        {d.name}\n                        <Description>\n                          {d.gender},&nbsp;\n                          {d.age} years old                      \n                        </Description>\n                      </Header.Content>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell textAlign='center'>\n                    <TimeFormat time={d.lastContact}/>\n                    <Description>{d.lastNote} </Description>\n                  </Table.Cell>\n                  <DTCell value={d.bodyWeight} unit='lbs' valueDiff={d.bodyWeightDiff} SLData={d.bodyWeightSLData} lastDate={d.bodyWeightLastDate}/>\n                  <DTCell value={d.systolicBP} unit='mmHg' valueDiff={d.systolicBPDiff} SLData={d.systolicBPSLData} lastDate={d.systolicBPLastDate}/>                \n                  <DTCell value={d.diastolicBP} unit='mmHg' valueDiff={d.diastolicBPDiff} SLData={d.diastolicBPSLData} lastDate={d.diastolicBPLastDate}/>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          <MemberModal \n              open={modalOpen} \n              onClose={this.closeModal} \n              members={members} \n              memberSelected={memberSelected} \n              onNoteChange={this.handleNoteChange} />\n        </ErrorBoundary>\n      )\n    }\n  }\n}","import React from 'react'\nimport { \n  Card, \n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n} from 'semantic-ui-react'\nimport ErrorBoundary from \"react-error-boundary\";\nimport {\n  AreaChart, \n  Area, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip,\n} from 'recharts';\n\n\nfunction CustomizedAxisTick(props){\n  const {\n    x, y, payload,\n  } = props;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text \n        x={0} \n        y={0} \n        dy={8} \n        fontSize='0.75em'\n        textAnchor=\"end\" \n        fill=\"#666\" \n        transform=\"rotate(-30)\">{payload.value}\n      </text>\n    </g>\n  );\n}\n\nexport default function QuickStats(props) {\n\n  if (!props.stats) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted>Loading</Loader>\n        </Dimmer>\n\n        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n      </Segment>\n    )\n  }\n\n  return (\n    <ErrorBoundary>\n      <Card.Group>\n        <Card style={{minWidth: '350px'}}>\n          <Card.Content>\n            <Card.Header content=\"All RPM Activities\"/>\n            <Card.Meta content=\"# of members w/ any RPM activities\"/>\n            <AreaChart\n                width={300}\n                height={150}\n                data={props.stats.au}\n                margin={{\n                  top: 20, right: 30, left: 0, bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey='time' tick={<CustomizedAxisTick />}/>\n                <YAxis />\n                <Tooltip />\n                  <Area type=\"monotone\" dataKey=\"value\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" />\n                </AreaChart>\n          </Card.Content>\n        </Card>\n        <Card style={{minWidth: '350px'}}>\n          <Card.Content>\n            <Card.Header content=\"Weight Scale Activities\"/>\n            <Card.Meta content=\"# of members w/ weight measures\"/>\n            <AreaChart\n                width={300}\n                height={150}\n                data={props.stats.bw}\n                margin={{\n                  top: 20, right: 30, left: 0, bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey='time' tick={<CustomizedAxisTick />} />\n                <YAxis />\n                <Tooltip />\n                  <Area type=\"monotone\" dataKey=\"value\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                </AreaChart>\n          </Card.Content>\n        </Card>\n        <Card style={{minWidth: '350px'}}>\n          <Card.Content>\n            <Card.Header content=\"Blood Pressure Activities\"/>\n            <Card.Meta content=\"# of members w/ blood pressure measures\"/>\n            <AreaChart\n                width={300}\n                height={150}\n                data={props.stats.bp}\n                margin={{\n                  top: 20, right: 30, left: 0, bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey='time'  tick={<CustomizedAxisTick />} />\n                <YAxis />\n                <Tooltip />\n                  <Area type=\"monotone\" dataKey=\"value\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                </AreaChart>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </ErrorBoundary>\n  )\n\n}","import { Stitch } from \"mongodb-stitch-browser-sdk\";\n\n// TODO: Add your Stitch app's App ID\nconst APP_ID = \"test-zglmt\";\n\n// TODO: Initialize the app client\nconst app = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nexport { app };\n","import { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app\";\n\n// TODO: Initialize a MongoDB Service Client\nconst mongoClient = app.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas-test\"\n);\n\n// TODO: Instantiate a collection handle for todo.items\nconst members = mongoClient.db(\"test\").collection(\"members\");\n\nexport { members };\n","import { \n  AnonymousCredential, \n  UserPasswordCredential,\n  UserPasswordAuthProviderClient \n} from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app.js\";\n\nexport function loginAnonymous() {\n  // Allow users to log in anonymously\n  const credential = new AnonymousCredential();\n  return app.auth.loginWithCredential(credential);\n}\n\nexport function hasLoggedInUser() {\n  // Check if there is currently a logged in user\n  return app.auth.isLoggedIn;\n}\n\nexport function getCurrentUser() {\n  // Return the user object of the currently logged in user\n  return app.auth.isLoggedIn ? app.auth.user : null;\n}\n\nexport function logoutCurrentUser() {\n  // Logout the currently logged in user\n  const user = getCurrentUser();\n  return app.auth.logoutUserWithId(user.id);\n}\n\nexport function signupUser(email, password) {\n  const emailPasswordClient = app.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n  return emailPasswordClient.registerWithEmail(email, password);\n}\n\nexport function loginUser(email, password) {\n  const credential = new UserPasswordCredential(email, password);\n  return app.auth.loginWithCredential(credential);\n}","import { members } from \"../stitch\";\nimport _ from 'lodash';\n\nexport const loadMembers = async () => {\n\n  let memberDetails = await members.find({}).asArray();\n  const today = new Date();\n  //const monthAgo = new Date(new Date().getTime() - 30*24*60*60*1000);\n\n  let bwDatesAll = []; // body weight\n  let bpDatesAll = []; // blood pressure\n  let auDatesAll = []; // active user\n\n  _.forEach(memberDetails, function(d){\n\n    const bwDates = _.union(_.map(d.bodyWeightData, x => x.time.substring(0,10)));\n    const bpDates = _.union(_.map(d.systolicBPData, x => x.time.substring(0,10)));\n    const auDates = _.union(_.concat(bwDates, bpDates));\n\n    bwDatesAll = _.concat(bwDatesAll, bwDates);\n    bpDatesAll = _.concat(bpDatesAll, bpDates);\n    auDatesAll = _.concat(auDatesAll, auDates);\n\n    d.dob = new Date(d.dob);\n    d.age = Math.round((today.getTime() - d.dob.getTime()) / 31536000000);\n\n    if (d.bodyWeightData.length > 0){\n      d.bodyWeightLastDate = _.takeRight(d.bodyWeightData, 1)[0].time;\n      d.bodyWeightSLData = _.map(d.bodyWeightData, x => x.value);\n      d.bodyWeight = Math.round(_.takeRight(d.bodyWeightSLData, 1)[0]*100)/100;\n      d.bodyWeightDiff = Math.round((d.bodyWeight - d.bodyWeightSLData[0])*100)/100;\n    }\n\n    if (d.systolicBPData.length > 0){\n      d.systolicBP = Math.round(_.takeRight(d.systolicBPData, 1)[0].value*100)/100;\n      d.systolicBPLastDate = _.takeRight(d.systolicBPData, 1)[0].time;      \n      d.systolicBPSLData = _.map(d.systolicBPData, x => x.value);\n      d.systolicBPDiff = Math.round((d.systolicBP - d.systolicBPSLData[0])*100)/100;\n    }\n\n    if (d.diastolicBPData.length > 0){\n      d.diastolicBP = Math.round(_.takeRight(d.diastolicBPData, 1)[0].value*100)/100;\n      d.diastolicBPLastDate = _.takeRight(d.diastolicBPData, 1)[0].time;      \n      d.diastolicBPSLData = _.map(d.diastolicBPData, x => x.value);\n      d.diastolicBPDiff = Math.round((d.diastolicBP - d.diastolicBPSLData[0])*100)/100;\n    }    \n\n    if (d.noteData.length > 0) {\n      d.lastContact = _.takeRight(d.noteData, 1)[0].time;\n      d.lastNote = _.takeRight(d.noteData, 1)[0].value;\n      d.noteData = d.noteData.reverse();\n    }\n\n\n    d.img = 'images/' + d.avatar + '.png';\n\n\n\n  });\n\n  let bwStats = _.sortBy(_.map(_.countBy(bwDatesAll), (value, time) => ({time, value})), 'time');\n  let bpStats = _.sortBy(_.map(_.countBy(bpDatesAll), (value, time) => ({time, value})), 'time');\n  let auStats = _.sortBy(_.map(_.countBy(auDatesAll), (value, time) => ({time, value})), 'time');    \n\n\n  return {members: memberDetails, \n          stats: {\n            au: auStats, \n            bw: bwStats, \n            bp: bpStats}};\n};\n","import React, { Component } from 'react'\nimport { Header} from 'semantic-ui-react'\nimport DataTable from './DataTable'\nimport QuickStats from './QuickStats'\nimport ErrorBoundary from \"react-error-boundary\";\nimport { loadMembers } from './useMembers'\n\n\nexport default class Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleMembersChange = this.handleMembersChange.bind(this);\n    this.state = {\n      members: null,\n      stats: null, \n    };\n  }\n\n  componentDidMount() {\n    loadMembers()\n      .then(data => (this.setState({members: data.members, \n                                stats: data.stats})));\n  }\n\n  handleMembersChange(newMembers) {\n    this.setState({members: newMembers});\n  }\n\n  render() {\n    return (\n    \t<ErrorBoundary>\n        <Header as='h2'>\n        \t<Header.Content>Quick Stats</Header.Content>\n        \t<Header.Subheader>Summary statistics of RPM activities</Header.Subheader>\n        </Header>\n        <QuickStats stats={this.state.stats}></QuickStats>\n    \t  <Header as='h2'>\n    \t  \t<Header.Content>Member Details</Header.Content>\n    \t  \t<Header.Subheader>Sort members by clickling the column headers, and click a member to view more details.</Header.Subheader>\n    \t  </Header>\n        <DataTable members={this.state.members} onMembersChange={this.handleMembersChange}></DataTable>\n    \t</ErrorBoundary>\n    )\n  }\n}","import React from 'react'\nimport { Grid, Image, Form } from 'semantic-ui-react'\nimport ErrorBoundary from 'react-error-boundary';\n\n\nexport default function Enrollment() {\n\n  return (\n  \t<ErrorBoundary>\n      <Grid textAlign='center' >\n        <Grid.Column  width={3}>\n          <Image src='/images/male1.png'/>\n        </Grid.Column>\n        <Grid.Column  width={6} textAlign='left'>\n          <Form>\n            <Form.Input fluid label='First name' placeholder='First name' />\n            <Form.Input fluid label='Last name' placeholder='Last name' />\n            <Form.Group inline>\n              <label>Avatar</label>\n              <Form.Radio\n                label='P1'\n                value='1'\n              />\n              <Form.Radio\n                label='P2'\n                value='2'       \n              />\n              <Form.Radio\n                label='P3'\n                value='3'\n              />\n              <Form.Radio\n                label='P4'\n                value='4'\n              />\n              <Form.Radio\n                label='P5'\n                value='5'\n              />                            \n            </Form.Group>\n          </Form>\n        </Grid.Column>\n        <Grid.Column width={9} textAlign='left'>\n          <Form>\n            <Form.Group inline>\n              <label>Gender</label>\n              <Form.Radio\n                label='Male'\n                value='male'\n              />\n              <Form.Radio\n                label='Female'\n                value='female'       \n              />\n              <Form.Radio\n                label='Other'\n                value='other'\n              />\n            </Form.Group>\n            <Form.Group inline>\n              <label>Devices</label>\n              <Form.Radio\n                label='Weight Scale'\n                value='ws'\n              />\n              <Form.Radio\n                label='Blood Pressure'\n                value='bp'       \n              />\n            </Form.Group>\n            <Form.Input fluid label='Date of Birth' placeholder='MM/DD/YYYY' />\n            <Form.Input fluid label='Phone Number' placeholder='000-000-0000' />\n            <Form.Input fluid label='Address 1' placeholder='Street Address' />\n            <Form.Input fluid label='Address 2' placeholder='Apartment, Building, Floor, etc.' />\n            <Form.Input fluid label='City' placeholder='City' />\n            <Form.Group widths='equal'>\n              <Form.Input fluid label='State' placeholder='State' />\n              <Form.Input fluid label='Zip/Postal Code' placeholder='00000' />\n            </Form.Group>\n            <Form.TextArea label='Note' placeholder='Tell us more about the member...' />\n            <Form.Checkbox label='I (physician) confirm that the member is consulted and consented about the RPM devices.' />\n            <Form.Button>Send Devices</Form.Button>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </ErrorBoundary>\n  );\n}","import React from 'react'\nimport { Grid, Image, Form } from 'semantic-ui-react'\nimport ErrorBoundary from 'react-error-boundary';\n\nexport default function Settings() {\n\treturn (\n    <ErrorBoundary>\n      <Grid textAlign='center' >\n        <Grid.Column width={9} textAlign='left'>\n          <Form>\n            <Form.Group inline>\n              <label>Text Reminder Settings</label>\n              <Form.Radio\n                label='No Reminder'\n                value=''\n              />\n              <Form.Radio\n                label='If 2 Days Missing'\n                value=''       \n              />\n              <Form.Radio\n                label='If 3 Days Missing'\n                value=''\n              />\n            </Form.Group>\n            <Form.TextArea \n              label='Text Message Template' \n              placeholder='Hi {member}, did you forget your weight measurement today?' />\n\n            <Form.Group inline>\n              <label>Time Line Visualization</label>\n              <Form.Radio\n                label='Impute values'\n                value=''\n              />\n              <Form.Radio\n                label='No impute'\n                value=''       \n              />\n            </Form.Group>\n\n            <Form.Group inline>\n              <label>Default Sort Option</label>\n              <Form.Radio\n                label='Last Contact'\n                value=''\n              />\n              <Form.Radio\n                label='Weight High to Low'\n                value=''       \n              />\n              <Form.Radio\n                label='Weight Low to High'\n                value=''       \n              />              \n            </Form.Group>            \n          </Form>\n        </Grid.Column>\n      </Grid>\n    </ErrorBoundary>\n\n  );\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  hasLoggedInUser,\n  loginAnonymous,\n  logoutCurrentUser,\n  getCurrentUser,\n  signupUser,\n  loginUser,\n} from \"./../stitch/authentication\";\n\n// Create a React Context that lets us expose and access auth state\n// without passing props through many levels of the component tree\nconst StitchAuthContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useStitchAuth() {\n  const context = React.useContext(StitchAuthContext);\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function StitchAuthProvider(props) {\n  const [authState, setAuthState] = React.useState({\n    isLoggedIn: hasLoggedInUser(),\n    currentUser: getCurrentUser(),\n  });\n\n  // Authentication Actions\n  const handleAnonymousLogin = async () => {\n\n    const { isLoggedIn } = authState;\n    if (!isLoggedIn) {\n      const loggedInUser = await loginAnonymous();\n      setAuthState({\n        ...authState,\n        isLoggedIn: true,\n        currentUser: loggedInUser,\n      });\n    }\n  };\n\n  const handleLogout = async () => {\n    const { isLoggedIn } = authState;\n    if (isLoggedIn) {\n      await logoutCurrentUser();\n      setAuthState({\n        ...authState,\n        isLoggedIn: false,\n        currentUser: null,\n      });\n    } else {\n      console.log(`can't handleLogout when no user is logged in`);\n    }\n  };\n\n  const handleSignup = async (email, password) => {\n    const signupStatus = await signupUser(email, password);\n    //console.log(signupStatus);\n  }\n\n  const handleEmailPasswordLogin = async (email, password) => {\n    const loggedInUser = await loginUser(email, password);\n    //console.log(loggedInUser);\n    setAuthState({\n        ...authState,\n        isLoggedIn: true,\n        currentUser: loggedInUser,\n    });\n  }\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const authInfo = React.useMemo(\n    () => {\n      const { isLoggedIn, currentUser } = authState;\n      const value = {\n        isLoggedIn,\n        currentUser,\n        actions: { handleAnonymousLogin, \n                  handleLogout,\n                  handleSignup,\n                  handleEmailPasswordLogin,\n                },\n      };\n      return value;\n    },\n    [authState.isLoggedIn],\n  );\n  return (\n    <StitchAuthContext.Provider value={authInfo}>\n      {props.children}\n    </StitchAuthContext.Provider>\n  );\n}\nStitchAuthProvider.propTypes = {\n  children: PropTypes.element,\n};\n","import React, { useState } from \"react\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport Dashboard from './Dashboard'\nimport Enrollment from './Enrollment'\nimport Settings from './Settings'\nimport { useStitchAuth } from \"./StitchAuth\";\nimport { Container, Menu, Button, Image } from 'semantic-ui-react'\n\nexport default function RPMApp() {\n  \n  const { currentUser, actions} = useStitchAuth();\n\n  const [menu, setMenu] = useState(\"dashboard\")\n\n  const handleMenuChange = (event, { name }) => {\n    setMenu(name);\n  }\n\n  return (\n    <ErrorBoundary>\n      <Menu borderless size='large' fixed='top'>\n        <Container>\n          <Menu.Item as='a' header>\n            <Image size='mini' src='/logo.png' style={{ marginRight: '1.5em'}} />\n            RPM Company\n          </Menu.Item>\n          <Menu.Item\n            name='dashboard'\n            active={menu === 'dashboard'}\n            content='Dashboard'\n            onClick={handleMenuChange}\n          />\n          <Menu.Item\n            name='enrollment'\n            active={menu === 'enrollment'}\n            content='Enrollment'\n            onClick={handleMenuChange}\n          />\n          <Menu.Item\n            name='settings'\n            active={menu === 'settings'}\n            content='Settings'\n            onClick={handleMenuChange}\n          />\n               \n          <Menu.Item position='right'> \n            <Menu.Item\n              style={{color: 'grey'}}\n              content={'Hello, ' + currentUser.profile.email + '!'}\n            /> \n            <Button \n              basic\n              as='a' \n              color='instagram' \n              onClick={actions.handleLogout}>\n              Logout\n            </Button>\n          </Menu.Item>\n        </Container>\n      </Menu>\n      <Container style={{ marginTop: '7em' }}>\n      {(menu === 'dashboard')?\n        <Dashboard/> :\n        ((menu === 'enrollment')?\n          <Enrollment/>:\n          <Settings/>)}\n      </Container>\n    </ErrorBoundary>\n  );\n}\n\n\n\n","import React, { useState } from 'react'\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport { useStitchAuth } from \"./StitchAuth\";\n\nconst LoginForm = props => {\n  \n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const { actions } = useStitchAuth();\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  }\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  }\n\n  const handleSubmit = event => {\n    \n    //console.log(email, password)\n    //actions.handleAnonymousLogin();\n    //actions.handleSignup(email, password);\n    actions.handleEmailPasswordLogin(email, password);\n  }\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' textAlign='center' style={{ margin: '0px' }}>\n          <Image src='/logo.png' />\n          RPM Company\n        </Header>\n        <p>\n          Log-in to your account\n        </p>\n        <Form size='large'>\n          <Segment stacked>\n            <Form.Input \n              fluid icon='user' \n              iconPosition='left' \n              placeholder='E-mail address'\n              onChange={handleEmailChange}\n            />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              onChange={handlePasswordChange}\n            />\n            <Button \n              basic\n              fluid size='large' \n              onClick={handleSubmit}>\n              Login\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default LoginForm;","// React\nimport React from \"react\";\n// Components & Hooks\nimport RPMApp from \"./RPMApp\";\nimport Login from \"./Login\";\nimport { StitchAuthProvider, useStitchAuth } from \"./StitchAuth\";\nimport 'semantic-ui-css/semantic.min.css'\n\n\nApp.propTypes = {};\nexport default function App() {\n  return (\n    <StitchAuthProvider>\n      <AppUI />\n    </StitchAuthProvider>\n  );\n}\n\nAppUI.propTypes = {};\nfunction AppUI() {\n  const { isLoggedIn } = useStitchAuth();\n  return (isLoggedIn ? <RPMApp /> : <Login />);\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}